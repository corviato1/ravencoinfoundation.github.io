{"version":3,"sources":["webpack:///./src/pages/proposals.jsx"],"names":["StyledProposals","styled","div","theme","screens","tablet","laptop","Proposals","useState","minutesData","setMinutesData","isLoading","setIsLoading","useEffect","a","fetch","response","json","responseData","cleanedMinutesData","filter","file","getFileExtension","name","fetchData","href","map","key","sha","split"],"mappings":"qOAOMA,EAAkBC,IAAOC,IAAV,+EAAGD,CAAH,qEAEEE,IAAMC,QAAQC,OAEdF,IAAMC,QAAQE,QAuDtBC,UAnDf,WAAsB,IAAD,EACmBC,mBAAS,IAAxCC,EADY,KACCC,EADD,OAEeF,oBAAS,GAApCG,EAFY,KAEDC,EAFC,KAuBnB,OAlBAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,sEACyBC,MACrB,qGAFJ,cACQC,EADR,gBAI6BA,EAASC,OAJtC,OAIQC,EAJR,OAKEN,GAAa,GAEPO,EAAqBD,EAAaE,QACtC,SAACC,GAAD,MAA0C,QAAhCC,YAAiBD,EAAKE,SAGlCb,EAAeS,GAXjB,4CADc,uBAAC,WAAD,wBAedK,KACC,IAGD,kBAAC,IAAD,KACE,kBAACxB,EAAD,KACE,kBAAC,IAAD,KACE,yCACA,mFAC0D,uBAAGyB,KAAK,uCAAR,gCAD1D,8EAGCd,EACC,yCAEA,4BACGF,EAAYiB,KAAI,SAACL,GAAD,OACf,wBAAIM,IAAKN,EAAKO,KACZ,uBAAGH,KAlCH,0CAkCmBJ,EAAKE,KAAKM,MAAM,KAAK,IAAKR,EAAKE,KAAKM,MAAM,KAAK,SAK1E,kCACI,uBAAGJ,KAAK,4FAAR,gBADJ","file":"component---src-pages-proposals-jsx-ee088ba93b73f8a034a0.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../components/common/Container\";\nimport Layout from \"../components/common/Layout\";\nimport getFileExtension from \"../utils/getFileExtension\";\nimport theme from \"../utils/theme\";\n\nconst StyledProposals = styled.div`\n  min-height: 50vh;\n  @media (min-width: ${theme.screens.tablet}) {\n  }\n  @media (min-width: ${theme.screens.laptop}) {\n  }\n`;\n\nfunction Proposals() {\n  const [minutesData, setMinutesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const ipfsURL = \"https://gateway.ravencoinipfs.com/ipfs/\";\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\n        \"https://api.github.com/repos/RavencoinFoundation/ravencoinfoundation.github.io/contents/Proposals\"\n      );\n      const responseData = await response.json();\n      setIsLoading(false);\n\n      const cleanedMinutesData = responseData.filter(\n        (file) => getFileExtension(file.name) === \"txt\"\n      );\n\n      setMinutesData(cleanedMinutesData);\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <Layout>\n      <StyledProposals>\n        <Container>\n          <h2>Proposals</h2>\n          <p>\n          If you&apos;re interested in taking on a proposal, e-mail <a href='mailto:contact@ravencoin.foundation'>contact@ravencoin.foundation</a> so it can be coordinated and we can avoid race conditions for the bounty.\n          </p>\n          {isLoading ? (\n            <p>Loading...</p>\n          ) : (\n            <ul>\n              {minutesData.map((file) => (\n                <li key={file.sha}>\n                  <a href={ipfsURL + file.name.split('.')[1]}>{file.name.split('.')[0]}</a>\n                </li>\n              ))}\n            </ul>\n          )}\n          <p>\n          See <a href='https://github.com/RavencoinFoundation/ravencoinfoundation.github.io/tree/main/Proposals'>instructions</a> for adding a proposal.\n          </p>\n        </Container>\n      </StyledProposals>\n    </Layout>\n  );\n}\n\nexport default Proposals;\n"],"sourceRoot":""}